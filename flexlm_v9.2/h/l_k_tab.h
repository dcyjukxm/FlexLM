/******************************************************************************

	    COPYRIGHT (c) 1988, 2003 by Macrovision Corporation.
	This software has been provided pursuant to a License Agreement
	containing restrictions on its use.  This software contains
	valuable trade secrets and proprietary information of 
	Macrovision Corporation and is protected by law.  It may 
	not be copied or distributed in any form or medium, disclosed 
	to third parties, reverse engineered or used in any manner not 
	provided for in said License Agreement except with the prior 
	written authorization from Macrovision Corporation.

 *****************************************************************************/
/*-	
 *	Module: $Id: l_k_tab.h,v 1.2 2003/01/13 22:13:12 kmaclean Exp $
 *
 *	Description: 	Tables of critical kernel routine code as a function
 *			of OS version/processor type.
 *
 *	M. Christiano
 *	6/7/88
 *
 *	Last changed:  2/12/92
 *
 */


#define ARCH_SUN68020	0x10    /*- 68020 */
#define ARCH_SUN4	0x20    /*- sparc */
#define ARCH_SUN386	0x30    /*- 386 */
#define ARCH_SUN68030	0x40    /*- 68030 */
#define ARCH_SUNSPARC	0x50    /*- sparc, yet again */


typedef struct _stab { char *symb; int size; short *template; } STAB;

/*-
 *	Kernel code for various machine types and OS versions.
 */

/*-
 *	Sun 680x0 machines
 */

#if defined (mc68020) || defined (mc68030)
/*-
 *	Machine type 23	(3/60)
 *	SUNOS v3.4 (or 3.5)
 */
static short _gethostid_3_4[] =
	{ 0x4e, 0x56, 0x0, 0x0, 0x61, 0xff, -1, -1, -1, -1,
	 0x21, 0xc0, 0x88, 0xc4, 0x4e, 0x5e, 0x4e, 0x75};
static short _machineid_3_4[] =
	{ 0x4e, 0x56, 0xff, 0xdc, 0x2e, 0x87, 0x48, 0x6e, 0xff, 0xe0,
	 0x61, 0xff, -1, -1, -1, -1, 0x58, 0x4f, 0x7e, 0x0,
	 0x1e, 0x2e, 0xff, 0xe1, 0x72, 0x18, 0xe3, 0xaf, 0xe9, 0xee,
	 0x0, 0x18, 0xff, 0xec, 0xd0, 0x87, 0x2e, 0x2e, 0xff, 0xdc,
	 0x4e, 0x5e, 0x4e, 0x75};
static short _getidprom_3_4[] =
	{ 0x20, 0x6f, 0x0, 0x4, 0x43, 0xf8, 0x0, 0x0, 0x22, 0x3c,
	 0x0, 0x0, 0x0, 0x1f, 0xe, 0x19, 0x0, 0x0, 0x10, 0xc0,
	 0x51, 0xc9, 0xff, 0xf8, 0x4e, 0x75};

/*-
 *	Machine type 18	(3/50)
 *	SUNOS v4.0
 */
static short _gethostid_4_0[] =
	{ 0x4e, 0x56, 0x0, 0x0, 0x4e, 0xb9, -1, -1, -1, -1,
	    0x21, 0xc0, 0x9a, 0x70, 0x70, 0x0, 0x4e, 0x5e };
static short _machineid_4_0[] =
	{ 0x4e, 0x56, 0xff, 0xdc, 0x2e, 0x87, 0x48, 0x6e, 0xff, 0xe0,
	    0x4e, 0xb9, -1, -1, -1, -1, 0x58, 0x4f, 0x7e, 0x0,
	    0x1e, 0x2e, 0xff, 0xe1, 0x72, 0x18, 0xe3, 0xaf, 0xe9, 0xee,
	    0x0, 0x18, 0xff, 0xec, 0xd0, 0x87, 0x2e, 0x2e, 0xff, 0xdc,
	    0x4e, 0x5e, 0x4e, 0x75 };
	/*- getidprom on v4 is the same as v3.x */

/*-
 *	SunOS 3.x with NSE (WHY is this a different kernel???)
 */
static short _gethostid_nse[] =
	{ 0x4e, 0x56, 0x0, 0x0, 0x4a, 0xb9, -1, -1, -1, -1,
	 0x67, 0x08, 0x20, 0x39, -1, -1, -1, -1, 0x60, 0x06, 
	 0x61, 0xff, -1, -1, -1, -1, 0x21, 0xc0, -1, -1, 
	 -1, -1, 0x4e, 0x75};
	/*- machineid and getidprom are the same as v3.x */

/*-
 *	Machine type 65 (3/470)
 *	SUNOS v4.0.3
 */
static short _gethostid_65_4_0_3[] =
	{ 0x4e, 0x56, 0x0, 0x0, 0x4e, 0xb9, -1, -1, -1, -1,
	 0x21, 0xc0, 0xda, 0x70, 0x70, 0x0, 0x4e, 0x5e, 0x4e, 0x75};
	 /*- machineid same as 4.0 */
static short _getidprom_65_4_0_3[] =
	{ 0x20, 0x6f, 0x0, 0x4, 0x43, 0xf9, 0xfe, 0xdf, 0x8c, 0x0,
	 0x22, 0x3c, 0x0, 0x0, 0x0, 0x1f, 0x10, 0xd9, 0x51, 0xc9,
	 0xff, 0xfc, 0x4e, 0x75};

/*-
 *	Tables of kernel code combinations.
 */

static STAB _3_4table[] = 
		{ "_gethostid", 18, _gethostid_3_4,
		  "_machineid", 44, _machineid_3_4,
		  "_getidprom", 26, _getidprom_3_4,
		  "", 0, 0 };

static STAB _4_0table[] = 
		{ "_gethostid", 18, _gethostid_4_0,
		  "_machineid", 44, _machineid_4_0,
		  "_getidprom", 26, _getidprom_3_4,
		  "", 0, 0 };

static STAB _NSEtable[] = 
		{ "_gethostid", 34, _gethostid_nse,
		  "_machineid", 44, _machineid_3_4,
		  "_getidprom", 26, _getidprom_3_4,
		  "", 0, 0 };

static STAB _65_4_0_3table[] = {
		"_gethostid", 20, _gethostid_65_4_0_3,
		"_machineid", 44, _machineid_4_0,
		"_getidprom", 24, _getidprom_65_4_0_3,
		  "", 0, 0 };

#endif 68020 || 68030

/*-
 *	Sun 386 machines 
 */

#ifdef sun386
/*-
 *	Machine type 49	(386i)
 *	SUNOS v4.0
 */
static short gethostid_49_4_0[] =
	{ 0x55, 0x8b, 0xec, 0xe8, -1, -1, -1, -1, 0xa3, 0xe0,
	 0x98, 0xff, 0xfc, 0xc9, 0xc3};
static short machineid_49_4_0[] =
	{ 0x55, 0x8b, 0xec, 0x83, 0xec, 0x20, 0x57, 0x8d, 0x45, 0xe0,
	 0x50, 0xe8, -1, -1, -1, -1, 0x59, 0xf, 0xb6, 0x45,
	 0xe1, 0xc1, 0xe0, 0x18, 0x8b, 0xf8, 0x8b, 0x45, 0xec, 0x25,
	 0xff, 0xff, 0xff, 0x0, 0x3, 0xf8, 0x8b, 0xc7, 0x8b, 0x7d,
	 0xdc, 0xc9, 0xc3};
static short getidprom_49_4_0[] =
	{ 0x55, 0x8b, 0xec, 0x50, 0xc7, 0x45, 0xfc, 0x0, 0x0, 0x0,
	 0x0, 0xeb, 0x16, 0x8b, 0x45, 0x8, 0xff, 0x45, 0x8, 0x8b,
	 0x55, 0xfc, 0x81, 0xea, 0x0, 0x20, 0x10, 0x3, 0x8a, 0xa,
	 0x88, 0x8, 0xff, 0x45, 0xfc, 0x83, 0x7d, 0xfc, 0x20, 0x7c,
	 0xe4, 0xc9, 0xc3};
static STAB _49_4_0table[] = {
		"gethostid", 15, gethostid_49_4_0,
		"machineid", 43, machineid_49_4_0,
		"getidprom", 43, getidprom_49_4_0,
		  "", 0, (short *) 0 };

#endif sun386
/*-
 *	Sun sparc machines
 */
#ifdef sparc
/*-
 *	Machine type 34 (4/110)
 *	SUNOS v4.0
 */
static short _gethostid_34_4_0[] =
	{ 0x9d, 0xe3, 0xbf, 0xc0, -1, -1, -1, -1, 0x1, 0x0,
	 0x0, 0x0, 0xd0, 0x20, 0x34, 0xc8, 0x81, 0xc7, 0xe0, 0x8,
	 0x91, 0xe8, 0x20, 0x0};
static short _machineid_34_4_0[] =
	{ 0x9d, 0xe3, 0xbf, 0x80, -1, -1, -1, -1, 0x90, 0x7,
	 0xbf, 0xe0, 0xf0, 0x7, 0xbf, 0xec, 0xd2, 0xf, 0xbf, 0xe1,
	 0x1f, 0x0, 0x3f, 0xff, 0x9e, 0x13, 0xe3, 0xff, 0xb1, 0x36,
	 0x20, 0x8, 0xb0, -1, -1, -1, 0x93, 0x2a, 0x60, 0x18,
	 0xb0, 0x2, 0x40, 0x18, 0x81, 0xc7, 0xe0, 0x8, 0x81, 0xe8,
	 0x0, 0x0};
static short _getidprom_34_4_0[] =
	{ 0x82, 0x10, 0x20, 0x0, 0x84, 0x10, 0x0, 0x0, 0xce, 0x88,
	 0x40, 0x42, 0x84, 0x0, 0xa0, 0x1, 0xce, 0x2a, 0x0, 0x0,
	 0x80, 0xa0, 0xa0, 0x20, 0x32, 0xbf, 0xff, 0xfc, 0x90, 0x2,
	 0x20, 0x1, 0x81, 0xc3, 0xe0, 0x8, 0x1, 0x0, 0x0, 0x0};

/*-
 *	Machine type 84 (Sparcstation SLC)
 *	SUNOS v4.1
 */
static short _gethostid_84_4_1[] =
	{ 0x9d, 0xe3, 0xbf, 0xa0, 0x40, 0x2, -1, -1, 0x1, 0x0,
	 0x0, 0x0, 0x13, 0x3e, 0x4, -1, -1, 0x2, 0x63, 0x8,
	 0xd0, 0x22, 0x63, 0xac, 0x81, 0xc7, 0xe0, 0x8, 0x81, 0xe8,
	 0x0, 0x0};
static short _machineid_84_4_1[] =
	{ 0x9d, 0xe3, 0xbf, 0x80, 0x40, 0x0, -1, -1, 0x90, 0x7,
	 0xbf, 0xe0, 0xfa, 0xf, 0xbf, 0xe1, 0xd4, 0x7, 0xbf, 0xec,
	 0xbb, 0x2f, 0x60, 0x18, 0x95, 0x32, 0xa0, 0x8, 0xba, 0x7,
	 0x40, 0xa, 0x81, 0xc7, 0xe0, 0x8, 0x91, 0xe8, 0x0, 0x1d};
static short _getidprom_84_4_1[] =
	{ 0x13, 0x3f, 0xff, 0xe1, 0x92, 0x12, 0x63, 0xd8, 0x94, 0x10,
	 0x0, 0x0, 0xd6, 0xa, 0x40, 0xa, 0x94, 0x2, 0xa0, 0x1,
	 0xd6, 0x2a, 0x0, 0x0, 0x80, 0xa2, 0xa0, 0x20, 0x32, 0xbf,
	 0xff, 0xfc, 0x90, 0x2, 0x20, 0x1, 0x81, 0xc3, 0xe0, 0x8,
	 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0};
#ifdef INCLUDE_SOLBOURNE_SUPPORT
/*-
 *	Machine type 4
 *	Solbourne OS/MP v4.0
 */
static short _gethostid_4_4_0[] =
	{ 0x9d, 0xe3, 0xbf, 0xc0, -1, -1, -1, -1, 0x1, 0x0,
	 0x0, 0x0, 0xd0, 0x20, -1, 0xb8, 0x81, 0xc7, 0xe0, 0x8,
	 0x91, 0xe8, 0x20, 0x0};
static short _machineid_4_4_0[] =
	{ 0x11, 0x3f, 0xc6, -1, 0xd0, 0x2, -1, -1, 0x80, 0x90,
	 0x0, 0x8, 0x32, 0x80, 0x0, 0x4, 0x11, 0x3f, 0xc6, -1,
	 0x10, 0x80, 0x0, 0x10, 0x9a, 0x10, 0x20, 0x0, 0xd6, 0x2,
	 -1, -1, 0xd6, 0xa, 0xe0, 0x10, 0xd2, 0x2, -1, -1,
	 0xd2, 0xa, 0x60, 0x8, 0xda, 0x2, -1, -1, 0xda, 0xb,
	 0x40, 0x0, 0xd0, 0x2, -1, -1, 0x9b, 0x2b, 0x60, 0x18,
	 0xd0, 0xa, 0x20, 0x18, 0x93, 0x2a, 0x60, 0x10, 0x9a, 0x13,
	 0x40, 0x9, 0x97, 0x2a, 0xe0, 0x8, 0x9a, 0x13, 0x40, 0xb,
	 0x9a, 0x13, 0x40, 0x8, 0x81, 0xc3, 0xe0, 0x8, 0x90, 0x0,
	 0x0, 0xd};
#endif
/*-
 *	Machine type 81 (??)
 *	SUNOS v4.0.3c
 */
	/*- gethostid and machineid same as 4/110 v4 */
static short _getidprom_81_4_0_3c[] =
	{ 0x3, 0x3f, 0xff, 0xe1, 0x82, 0x10, 0x63, 0xd8, 0x84, 0x10,
	 0x0, 0x0, 0xce, 0x8, 0x40, 0x2, 0x84, 0x0, 0xa0, 0x1,
	 0xce, 0x2a, 0x0, 0x0, 0x80, 0xa0, 0xa0, 0x20, 0x32, 0xbf,
	 0xff, 0xfc, 0x90, 0x2, 0x20, 0x1, 0x81, 0xc3, 0xe0, 0x8,
	 0x1, 0x0, 0x0};
static STAB _34_4_0table[] = {
		"_gethostid", 24, _gethostid_34_4_0,
		"_machineid", 52, _machineid_34_4_0,
		"_getidprom", 40, _getidprom_34_4_0,
		  "", 0, 0 };
static STAB _81_4_0_3ctable[] = {
		"_gethostid", 24, _gethostid_34_4_0,
		"_machineid", 52, _machineid_34_4_0,
		"_getidprom", 43, _getidprom_81_4_0_3c,
		  "", 0, 0  };
static STAB _84_4_1table[] = {
		"_gethostid", 32, _gethostid_84_4_1,
		"_machineid", 40, _machineid_84_4_1,
		"_getidprom", 48, _getidprom_84_4_1,
		  "", 0, 0 };
#ifdef INCLUDE_SOLBOURNE_SUPPORT
static STAB _4_4_0table [] = {
		"_gethostid", 24, _gethostid_4_4_0,
		"_machineid", 92, _machineid_4_4_0,
		"", 0, 0 };
#endif
#endif sparc

/*-
 *	Table of kernel code combos vs machine type/OS version.
 *	Put the "most generic" entry first, since the "last chance" matching
 *	algorithm will use the first entry with a matching OS version #.
 */

static struct _mtab { int mach; char *ver; STAB *tab; } mtab[] = {
#if defined (mc68020) || defined (mc68030)
	{ -1, "3.4", _3_4table },
	{ -1, "3.5", _3_4table },	/*- 3.5 just like 3.4 */
	{ -1, "3.5-NSE", _NSEtable },
	{ -1, "3.4", _NSEtable },	/*- Sometimes NSE disguises itself */
	{ -1, "3.5", _NSEtable },	/*- Sometimes NSE disguises itself */
	{ -1, "4.0", _4_0table },
#endif
#ifdef sun386
	{ -1 /*- 49 */, "4.0", _49_4_0table },
#endif
#ifdef sparc
	{ -1 /*- 34 */, "4.0", _34_4_0table },
	{ 33, "4.0.3c", _34_4_0table },	/*- 4/280 doesn't follow 4.0.3c code */
	{ -1 /*- 81 */, "4.0.3c", _81_4_0_3ctable },
	{ -1 /*- 84 */, "4.1", _84_4_1table },
#endif
	{ 0, "", (STAB *) 0 } 
};
#if defined (INCLUDE_SOLBOURNE_SUPPORT) && defined (sparc)
static struct _mtab sol_mtab[] = {
	{ -1 /*- 4  Solbourne */, "4.0", _4_4_0table },
	{ 0, "", (STAB *) 0 } 
};
#endif
#if defined (mc68020) || defined (mc68030)
static struct _mtab sun3x_mtab[] = {
	{ -1 /*- 65 */, "4.0.3", _65_4_0_3table },
	{ 0, "", (STAB *) 0 } 
};
#endif
